// Automatically create opportunity when an Account record is created.
// When a new Account is created with Account Type as "Prospect" then 
Create new Task for yourself and send email alert to yourself.
trigger Account1 on Account (after insert) {
List<Opportunity> oppList = new List<Opportunity>();
List<Task> tasks = new List<Task>();
  
       for (Account a : Trigger.new) {
           Opportunity o = new Opportunity();
           o.Name = a.Name + ' Opp';  // Burlington Textile Opp
           o.StageName = 'Qualification';
           o.CloseDate = Date.today() + 90;
           o.AccountId = a.Id;
           oppList.add(o);
          
           if (a.Type == 'Prospect') {
               Task t = new Task();
               t.Subject = 'New Account Test';
               t.Status = 'In Progress';
               t.WhatId = a.Id;
               t.OwnerId = UserInfo.getUserId();
               tasks.add(t);
           }   
       }
       insert oppList;
       insert tasks;
}

-------------*****************Test: **************----------------------------

@istest
public class Account1_Test {
    @istest
    public static void singleTest() {
        //Create data or set trigger conditions
        TestDataFactory.createAccounts(1);  // Expecting to see an account record and a related opp record
        
        //Get data from db
        Opportunity o = [SELECT Name, AccountId, Account.Id FROM Opportunity LIMIT 1];
        Task t = [SELECT WhatId FROM Task LIMIT 1];
        Account a = [SELECT Id FROM Account LIMIT 1];

        //Check data
        System.assertEquals(o.AccountId, o.Account.Id);
        System.assertEquals(t.WhatId, a.Id);

    }
    @istest
    public static void multipleTest() {
        TestDataFactory.createAccounts(10);

        List<Opportunity> opps = [SELECT Name, AccountId, Account.Id FROM Opportunity];
        List<Task> tasks = [SELECT WhatId FROM Task];
        List<Account> accs = [SELECT Id FROM Account];

        for (Opportunity o : opps) {
            System.assertEquals(o.AccountId, o.Account.Id);
        }

        for (Task t : tasks) {
            for (Account a : accs) {
                if (t.WhatId == a.Id) {
                    System.assertEquals(t.WhatId, a.Id);
                }
                System.assertNotEquals(t.WhatId, a.Id);
            }
        }

    }
}
